// <auto-generated />
using System;
using MediaRatingAPI.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace MediaRatingAPI.Migrations
{
    [DbContext(typeof(MediaDbContext))]
    [Migration("20250402143432_GenreRelationship")]
    partial class GenreRelationship
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("GenreMedia", b =>
                {
                    b.Property<int>("GenresId")
                        .HasColumnType("int");

                    b.Property<int>("MediasId")
                        .HasColumnType("int");

                    b.HasKey("GenresId", "MediasId");

                    b.HasIndex("MediasId");

                    b.ToTable("GenreMedia");
                });

            modelBuilder.Entity("MediaRatingAPI.Models.Distributor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Distributors");
                });

            modelBuilder.Entity("MediaRatingAPI.Models.Genre", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Genres");
                });

            modelBuilder.Entity("MediaRatingAPI.Models.Media", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("DistributorId")
                        .HasColumnType("int");

                    b.Property<string>("Format")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("DistributorId");

                    b.ToTable("Medias");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Format = "Film",
                            Title = "Bookworm"
                        },
                        new
                        {
                            Id = 2,
                            Format = "TV",
                            Title = "Invincible (Season 1)"
                        },
                        new
                        {
                            Id = 3,
                            Format = "Film",
                            Title = "Flow"
                        },
                        new
                        {
                            Id = 4,
                            Format = "Film",
                            Title = "Hot Fuzz"
                        },
                        new
                        {
                            Id = 5,
                            Format = "TV",
                            Title = "Ar y Ffin"
                        });
                });

            modelBuilder.Entity("MediaRatingAPI.Models.MediaDetails", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("MediaId")
                        .HasColumnType("int");

                    b.Property<int?>("Rating")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ReleaseDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("MediaId")
                        .IsUnique();

                    b.ToTable("MediaDetails");
                });

            modelBuilder.Entity("GenreMedia", b =>
                {
                    b.HasOne("MediaRatingAPI.Models.Genre", null)
                        .WithMany()
                        .HasForeignKey("GenresId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MediaRatingAPI.Models.Media", null)
                        .WithMany()
                        .HasForeignKey("MediasId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MediaRatingAPI.Models.Media", b =>
                {
                    b.HasOne("MediaRatingAPI.Models.Distributor", "Distributor")
                        .WithMany()
                        .HasForeignKey("DistributorId");

                    b.Navigation("Distributor");
                });

            modelBuilder.Entity("MediaRatingAPI.Models.MediaDetails", b =>
                {
                    b.HasOne("MediaRatingAPI.Models.Media", null)
                        .WithOne("MediaDetails")
                        .HasForeignKey("MediaRatingAPI.Models.MediaDetails", "MediaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MediaRatingAPI.Models.Media", b =>
                {
                    b.Navigation("MediaDetails");
                });
#pragma warning restore 612, 618
        }
    }
}
